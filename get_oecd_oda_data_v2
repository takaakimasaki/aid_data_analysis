install.packages("devtools")
library(devtools)
install_github("expersso/OECD")
library(OECD)
library(foreign)
dataset <- "TABLE2A"
#dstruc <- get_data_structure(dataset)
#str(dstruc, max.level = 1)
##Import SDMX DATA URL from stats.oecd.org.
###SDMX URL will look like this if one wants to scrape data on Japanese ODA to Tanzania and Zambia: http://stats.oecd.org/restsdmx/sdmx.ashx/GetData/TABLE2A/282+288.701.1.206.A/all?startTime=2004&endTime=2013
####"282+288" refers to the country codes of Tanzania and Zambia
####"701" in ".701.1.206.A" refers to the donor code of Japan
####"1" in ".701.1.206.A" refers to "Part" of the world (1, Developing Countries; 2, Countries in Transition)
####"206" in ".701.1.206.A" refers to aid type (206 is "ODA, Total Net")
####"A" in ".701.1.206.A" refers to the type of price: A=current; D=constant.
####"startTime=2004&endTime=2013" refers to the starting and end years of data (to be scraped)
##Recipient and donor code are available at http://www.oecd.org/dac/stats/dacandcrscodelists.htm.
##Note that
###DONOR CODE==20005, ALL DONORS
###DONOR CODE==20001, ALL DAC DONORS
###DONOR CODE==20006, ALL NON-DAC DONORS
###DONOR CODE==20002, ALL MULTILATERALS
###Aid Type==201, Grants, Total
###Aid Type==212, Grants: Debt Forgiveness
###Aid Type==221, Grants: Other Debt Grants
###Aid Type==208, AF/Interest Subsidies
###Aid Type==219, Recoveries
###Aid Type==210, Capital Subscriptions - Deposits
###Aid Type==211, Memo: Capital Subscriptions - Encashments
###Aid Type==204, ODA Gross Loans
###Aid Type==214, Rescheduled Debt
###Aid Type==205, ODA Loan Repayments
###Aid Type==215, Offsetting entries for debt relief
###Aid Type==218, ODA Loans: Total Net
###Aid Type==217, Equity Investment
###Aid Type==206, ODA: Total Net
###Aid Type==207, Technical Cooperation
###Aid Type==213, Development Food Aid
###Aid Type==216, Humanitarian Aid
###Aid Type==209, Interest received
###Aid Type==106, Imputed Multilateral ODA
###Aid Type==240, Memo: ODA Total, Gross disbursements
###Aid Type==250, Memo: ODA Total, excl. Debt
###Aid Type==255, Memo: Net debt relief
###Aid Type==296, ODA per capita ($)
###Aid Type==286, ODA as % GNI (Recipient)
#API documentation in OECD data: https://data.oecd.org/api/sdmx-json-documentation/
#list_str=c(20001,20002,20005,20006,1,2,3,4,5,6,7,8,9,10,11,12,18,20,21,22,40,50,61,68,69,76,301,302,701,742,801,820,918,104,811,812,901,905,906,912,913,914,916,921,923,928,944,948,951,953,958,959,960,963,964,966,967,971,974,976,978,988,1311,1312,1313,30,45,55,62,70,72,75,77,82,83,84,87,546,552,566,576,732,764)
list_str=c(20001,20002,20005,20006,1,2,3,4,5,6,7,8,9,10,11,12,18,20,21,22,40,50,61,68,69,76,301,302,701,742,801,820,918,104,811,812,901,905,906,912,913,914,916,921,923,928,944,948,951,953,958,959,960,963,964,966,967,971,974,976,978,988,1311,1312,1313,30,45,55,62,70,72,75,77,82,83,84,87,546,552,566,576,732,764)
for(i in list_str) {
    data_source <-paste("10100+10010+71+86+64+62+30+66+35+57+45+93+65+63+61+88+55+85+89+10001+10002+130+142+133+136+139+189+10003+225+236+227+287+228+230+229+231+232+233+234+247+235+274+237+245+271+238+239+240+241+243+244+248+249+251+252+253+255+256+257+258+259+275+260+261+266+276+268+269+270+272+273+218+279+278+280+282+283+285+288+265+289+298+10004+10005+376+377+373+328+329+352+331+388+386+336+338+378+340+342+381+347+349+351+354+358+385+361+364+366+382+383+384+375+387+380+389+10006+425+428+431+434+437+440+443+446+451+454+457+460+463+489+498+10007+10008+725+728+730+740+735+738+742+745+748+751+752+753+755+761+732+764+765+769+789+10009+625+610+611+666+630+612+645+650+613+614+655+635+660+665+640+615+616+617+619+679+689+10011+530+540+543+546+549+552+555+558+561+566+573+576+550+580+589+798+10012+831+832+840+836+859+860+845+850+856+858+861+862+880+866+868+870+872+854+876+889+9998+225+236+287+228+231+232+233+235+274+245+271+238+240+243+244+249+251+252+253+255+256+259+260+266+268+269+272+273+279+278+282+283+285+288+349+728+745+765+625+666+630+635+660+580+836+880+866+872+854+248+279+265+740+614+615+57+93+85+142+136+230+229+234+247+241+261+280+352+342+347+351+364+428+446+451+738+753+755+769+610+612+645+614+665+640+616+617+543+573+550+832+859+860+862+880+868+870+71+86+64+66+65+63+55+130+133+139+227+239+257+275+276+270+218+376+377+352+336+338+378+340+381+354+358+385+366+382+383+384+425+431+434+437+440+454+457+460+463+730+751+764+611+613+655+616+540+543+549+555+831+832+859+845+856+861+870+876+62+30+35+45+61+258+376+373+328+329+331+388+386+361+382+375+387+443+725+735+742+748+761+732+530+546+552+558+561+566+576+840+850+858+88+89+189+237+289+298+380+389+489+498+752+789+650+619+679+689+589+798+889+9998+236+287+228+229+231+232+233+234+247+235+271+238+240+241+243+244+251+252+253+255+256+259+260+266+268+269+272+273+278+282+283+285+288+349+351+364+428+446+625+614+66+93+227+287+228+231+232+238+249+253+255+260+266+279+280+285+288+265+428+451+745+753+625+610+611+630+613+614+660+615+616+617+230+233+244+257+268+270+376+377+328+329+352+338+378+340+381+349+354+385+382+383+384+375+446+457+761+765+655+831+832+836+859+860+845+856+861+862+880+866+870+872+854+64+57+142+133+225+287+228+229+231+232+233+234+247+235+271+238+243+244+248+251+252+253+255+256+260+261+266+272+273+279+278+283+285+265+349+740+765+625+666+635+660+665+640+543+573+550+580+836+859+860+866+872+71+86+93+85+610+611+612+613+614+615+616+617+71+86+93+85+610+611+612+613+614+615+616+617+225+236+227+287+228+230+229+231+232+233+234+247+235+274+245+271+238+239+240+241+243+244+248+249+251+252+253+255+256+257+259+275+260+261+266+268+269+270+272+273+278+280+282+283+285+288+265+377+328+329+352+378+340+381+349+354+382+383+384+375+446+457+832+836+862+880+866+870+872+854+287+230+232+240+244+255+256+260+269.",i,".1.201+212+221+208+219+210+211+204+214+205+215+218+217+206+207+213+216+209+106+240+250+255+296+286.D/",sep="")
    #at times, get_dataset() fails to load data due to connection errors. let the code keep running until it gets the data.
    while(length(df) < 11){
        try({
            df <- get_dataset(dataset = dataset, filter=data_source, start_time=1960, end_time=2014, pre_formatted=TRUE)
            Sys.sleep(5)
        })
    }
    
    data <- data.frame(df)
    data_title_dta<-paste("data",i,".dta",sep="")
    data_title_csv<-paste("data",i,".csv",sep="")
    write.csv(data, file = data_title_csv) #export data in the CSV format
    df <- c(NA) #reset it
}
